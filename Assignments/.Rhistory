library(readxl)
personal_income_series <- read_excel("~/GitHub/TimeSeries/Data/personal_income series.xls")
View(personal_income_series)
library(ggplot2)
library(tidyverse)
library(zoo)
library(tseries)
library(forecast)
library(stats)
library(MARSS)
library(datasets)
library(TTR)
personalincome <- ts(data = personal_income_series$y, frequency = 4)
plot.ts(personalincome, ylab = "Personal Income", xlab="Time")
forecast::ndiffs(personalincome, test = "adf")
DF <- adf.test(personalincome, k = 0)
DF
ADF2
ADF2 <- adf.test(personalincome, k = 2)
ADF2
ur.df(personalincome)
diff1dat <- diff(personalincome)
DF <- adf.test(diff1dat, k = 0)
ADF2 <- adf.test(diff1dat, k = 2)
ADF <- adf.test(diff1dat)
DF
ADF2
ADF
testing <- ur.df(personalincome)
library(urca)
testing <- ur.df(personalincome)
testing
DF <- adf.test(personalincome, k = 0)
DF
ADF2 <- adf.test(personalincome, k = 1)
ADF2
ADF2 <- adf.test(personalincome, k = 2)
ADF <- adf.test(personalincome)
DF
library(readxl)
personal_income_series <- read_excel("~/GitHub/TimeSeries/Data/personal_income series.xls")
View(personal_income_series)
library(ggplot2)
library(tidyverse)
As we can see from the above graph, the personal income seems to increase over time suggesting that there might be some sort of trend that is happening. To verify this, I decide to decompose the data to see if there is indeed any trend or seasonailty factor that is at play on the data.
personalincomedecomposed <- decompose(personalincome)
library(ggplot2)
library(tidyverse)
library(zoo)
library(forecast)
library(stats)
library(MARSS)
library(MARSS)
library(datasets)
library(TTR)
## Question 1: Model selection 5.5 points
### Plot the series and comment on how it evolves over time.
```{r, echo=FALSE}
personalincome <- ts(data = personal_income_series$y, frequency = 4)
plot.ts(personalincome, ylab = "Personal Income", xlab="Time")
personalincomedecomposed <- decompose(personalincome)
plot(personalincomedecomposed)
forecast::ndiffs(personalincome, test = "adf")
forecast::ndiffs(personalincome, test = "adf", alternative = c("explosive"))
DF <- adf.test(personalincome, k = 0,alternative = c("explosive"))
library(ggplot2)
library(tidyverse)
library(zoo)
library(tseries)
library(forecast)
library(stats)
library(MARSS)
library(datasets)
library(TTR)
forecast::ndiffs(personalincome, test = "adf")
ADF2 <- adf.test(personalincome, k = 2)
DF <- adf.test(personalincome, k = 0,alternative = c("explosive"))
DF
forecast::ndiffs(personalincome, test = "adf")
DF <- adf.test(personalincome, k = 0)
ADF2 <- adf.test(personalincome, k = 2)
ADF <- adf.test(personalincome)
DF
ADF2
ADF
library(readxl)
personal_income_series <- read_excel("G:/Github/TimeSeries/Data/personal_income series.xls")
View(personal_income_series)
diff1dat <- diff(personalincome)
library(FinTS)
library(ggplot2)
library(tidyverse)
library(zoo)
library(tseries)
library(forecast)
library(stats)
library(MARSS)
library(datasets)
library(TTR)
library(FinTS)
library(ggplot2)
library(tidyverse)
library(zoo)
library(tseries)
library(forecast)
library(stats)
library(MARSS)
library(datasets)
library(TTR)
library(FinTS)
personalincome <- ts(data = personal_income_series$y, frequency = 4)
plot.ts(personalincome, ylab = "Personal Income", xlab="Time")
personalincomedecomposed <- decompose(personalincome)
plot(personalincomedecomposed)
forecast::ndiffs(personalincome, test = "adf")
DF <- adf.test(personalincome, k = 0)
ADF2 <- adf.test(personalincome, k = 2)
ADF <- adf.test(personalincome)
DF
ADF2
ADF
diff1dat <- diff(personalincome)
DF <- adf.test(diff1dat, k = 0)
ADF2 <- adf.test(diff1dat, k = 2)
ADF <- adf.test(diff1dat)
DF
ADF2
ADF
acforiginal <- acf(personalincome)
paforiginal <- pacf(personalincome)
acftransformed <- acf(diff1dat)
paftransformed <- pacf(diff1dat)
ARMAAIC <-forecast::auto.arima(diff1dat, ic = c("aic"), trace = TRUE)
ARMABIC <-forecast::auto.arima(diff1dat, ic = c("bic"), trace = TRUE)
forecast::checkresiduals(ARMAAIC)
forecast::checkresiduals(ARMABIC)
ArchTest(diff1dat,lags = 6)
ArchTest(diff1dat, lags = 7)
x <- rnorm(1000)  # no unit-root
adf.test(x)
ARMAAIC <-forecast::auto.arima(diff1dat, ic = c("aic"))
ARMAAIC
ARMAAIC <-forecast::auto.arima(diff1dat, ic = c("aic")), trace = TRUE)
ARMAAIC <-forecast::auto.arima(diff1dat, ic = c("aic"), trace = TRUE)
ArchTest(diff1dat,lags = 6)
ArchTest(diff1dat, lags = 7)
ArchTest(diff1dat,lags = 6,demean = TRUE)
ArchTest(diff1dat,lags = 6,demean = FALSE)
library(aTSA)
arch.test(arima(diff1dat,order=c(1,0,0),output=TRUE)
arch.test(arima(diff1dat,order=c(1,0,0),output=TRUE))
arch.test(arima(diff1dat,order=c(1,0,0),output=TRUE))
arch.test(arima(diff1dat,order=c(1,0,0)),output=TRUE)
ArchTest(ARMAAIC)
ArchTest(ARMAAIC)
ArchTest
ArchTest(ARMAAIC)
ArchTest(diff1dat, lags =1)
ArchTest(diff1dat, lags =1, demean = FALSE)
forecast::checkresiduals(ARMAAIC)
acftransformed <- acf(diff1dat)
paftransformed <- pacf(diff1dat)
acftransformed <- acf(diff1dat)
ArchTest(diff1dat, lags = 1, demean = FALSE)
AutocorTest(diff1dat, type = c("Ljung-Box"))
ArchTest(ARMAAIC, lags = 1, demean = FALSE)
arch.test(ARMAAIC)
checkresiduals(ARMAAIC)
ArchTest(ARMAAIC, lags = 1, demean = FALSE)
ArchTest(diff1dat, lags = 1, demean = FALSE)
arch.test(arima(diff1dat,order=c(1,0,0)),output=TRUE)
arch.test(arima(diff1dat,order=c(0,0,2)),output=TRUE)
ArchTest(diff1dat, lags = 1, demean = FALSE)
arch.test(arima(diff1dat,order=c(1,0,0)),output=TRUE)
DF <- adf.test(personalincome, k = 0)
ADF2 <- adf.test(personalincome, k = 2)
ADF <- adf.test(personalincome)
DF <- tseries::adf.test(personalincome, k = 0)
DF <- tseries::adf.test(personalincome, k = 0)
ADF2 <- tseries::adf.test(personalincome, k = 2)
ADF <- tseries::adf.test(personalincome)
DF
ADF2
ADF
forecast::checkresiduals(ARMAAIC)
forecast::checkresiduals(ARMABIC)
forecast::checkresiduals(ARMAAIC)
forecast::checkresiduals(ARMABIC)
ArchTest(diff1dat, lags = 1, demean = FALSE)
arch.test(arima(diff1dat,order=c(1,0,0)),output=TRUE)
ArchTest(diff1dat, lags = 1, demean = FALSE)
arch.test(arima(diff1dat,order=c(0,0,2)),output=TRUE)
forecast::checkresiduals(ARMAAIC)
forecast::checkresiduals(ARMABIC)
ARMAAIC <-forecast::auto.arima(diff1dat, ic = c("aicc"), trace = TRUE)
ARMAAIC <-forecast::auto.arima(diff1dat, ic = c("aic"), trace = TRUE)
library(aTSA)
DF <- adf.test(diff1dat, k = 0)
ADF2 <- adf.test(diff1dat, k = 2)
ADF <- adf.test(diff1dat)
knitr::opts_chunk$set(echo = TRUE)
library(FinTS)
library(FinTS)
library(tseries)
library(FinTS)
library(tseries)
library(aTSA)
library(FinTS)
library(tseries)
library(aTSA)
library(urca)
library(FinTS)
library(tseries)
library(aTSA)
library(urca)
library(lmtest)
library(egcm)
library(haven)
irates <- read_dta("G:/Github/TimeSeries/Data/irates.dta")
irates <- read_dta("G:/Github/TimeSeries/Data/irates.dta")
irates <- read_dta("C:/Users/gaeta/Documents/Github/TimeSeries/Data/irates.dta")
attach(irates)
ts(r1)
ts(r3)
tseries::adf.test(r1,k=0) # Dickey Fuller Test: no unit root
tseries::adf.test(r1,k=1) # Augmented DF Test with 1 lag: no unit root
tseries::adf.test(r1,k=2) # Augmented DF Test with 2 lags: no unit root
tseries::adf.test(r1,k=4) # Augmented DF Test with 4 lags: unit root
tseries::adf.test(r1)     # Augmented DF Test with upper bounds lags: unit root
tseries::adf.test(r3,k=0) # Dickey Fuller Test: unit root
tseries::adf.test(r3,k=1) # Augmented DF Test with 1 lag: no unit root
tseries::adf.test(r3,k=1) # Augmented DF Test with 1 lag: no unit root
tseries::adf.test(r3,k=2) # Augmented DF Test with 2 lags: unit root
tseries::adf.test(r3,k=1) # Augmented DF Test with 1 lag: no unit root
tseries::adf.test(r3,k=2) # Augmented DF Test with 2 lags: unit root
tseries::adf.test(r3,k=3) # Augmented DF Test with 3 lags: unit root
tseries::adf.test(r3,k=2) # Augmented DF Test with 2 lags: unit root
tseries::adf.test(r3,k=3) # Augmented DF Test with 3 lags: unit root
tseries::adf.test(r3,k=4) # Augmented DF Test with 4 lags: unit root
tseries::adf.test(r3)     # Augmented DF Test with upper bounds lags: unit root
Reg1 <- lm(r1~r3)
Reg1Resid <- Reg1$residuals
tseries::adf.test(Reg1Resid,k=0) # no unit root
tseries::adf.test(Reg1Resid,k=0) # no unit root
tseries::adf.test(Reg1Resid,k=1) # no unit root
tseries::adf.test(Reg1Resid,k=1) # no unit root
tseries::adf.test(Reg1Resid,k=2) # no unit root
tseries::adf.test(Reg1Resid,k=2) # no unit root
tseries::adf.test(Reg1Resid,k=3) # no unit root
tseries::adf.test(Reg1Resid)     # no unit root. Long Run Relationship between r3 and r1.
tseries::adf.test(Reg2Resid,k=0) # no unit root
Reg2 <- lm(r3~r1)
Reg2Resid <- Reg2$residuals
tseries::adf.test(Reg2Resid,k=0) # no unit root
tseries::adf.test(Reg2Resid,k=1) # no unit root
tseries::adf.test(Reg2Resid,k=2) # no unit root
tseries::adf.test(Reg2Resid,k=3) # no unit root
tseries::adf.test(Reg2Resid)     # no unit root. Long Run Relationship between r3 and r1.
hi <- tseries::adf.test(Reg2Resid,k=0) # no unit root
hi$statistic
tseries::adf.test(Reg2Resid,k=0)
